---

- set_fact:
    matrix_dimension_requires_restart: false

- block:
    - name: Check if an SQLite database already exists
      stat:
        path: "{{ matrix_dimension_sqlite_database_path_local }}"
      register: matrix_dimension_sqlite_database_path_local_stat_result

    - block:
        - set_fact:
            matrix_postgres_db_migration_request:
              src: "{{ matrix_dimension_sqlite_database_path_local }}"
              dst: "{{ matrix_dimension_database_connection_string }}"
              caller: "{{ role_path|basename }}"
              engine_variable_name: 'matrix_dimension_database_engine'
              engine_old: 'sqlite'
              systemd_services_to_stop: ['matrix-dimension.service']
              pgloader_options: ['--with "quote identifiers"']
              # pgloader makes `isSelfBot` of type `smallint`, instead of `boolean`.
              # We need to fix it up
              additional_psql_statements_list:
                - 'ALTER TABLE dimension_users ALTER COLUMN "isSelfBot" DROP default;'
                - 'ALTER TABLE dimension_users ALTER COLUMN "isSelfBot" TYPE BOOLEAN USING("isSelfBot"::text::boolean);'
                - 'ALTER TABLE dimension_users ALTER COLUMN "isSelfBot" SET default false;'

        - import_tasks: "{{ role_path }}/../matrix-postgres/tasks/util/migrate_db_to_postgres.yml"

        - set_fact:
            matrix_dimension_requires_restart: true
      when: "matrix_dimension_sqlite_database_path_local_stat_result.stat.exists|bool"
  when: "matrix_dimension_database_engine == 'postgres'"

- name: Ensure Dimension base path exists
  file:
    path: "{{ matrix_dimension_base_path }}"
    state: directory
    mode: 0770
    owner: "{{ matrix_user_username }}"
    group: "{{ matrix_dimension_user_gid }}"

- name: Ensure Dimension config installed
  copy:
    content: "{{ matrix_dimension_configuration|to_nice_yaml }}"
    dest: "{{ matrix_dimension_base_path }}/config.yaml"
    mode: 0640
    owner: "{{ matrix_user_username }}"
    group: "{{ matrix_dimension_user_gid }}"

- name: Ensure Dimension image is pulled
  docker_image:
    name: "{{ matrix_dimension_docker_image }}"
    source: "{{ 'pull' if ansible_version.major > 2 or ansible_version.minor > 7 else omit }}"
    force_source: "{{ matrix_dimension_docker_image_force_pull if ansible_version.major > 2 or ansible_version.minor >= 8 else omit }}"
    force: "{{ omit if ansible_version.major > 2 or ansible_version.minor >= 8 else matrix_dimension_docker_image_force_pull }}"

- name: Ensure matrix-dimension.service installed
  template:
    src: "{{ role_path }}/templates/systemd/matrix-dimension.service.j2"
    dest: "{{ matrix_systemd_path }}/matrix-dimension.service"
    mode: 0644
  register: matrix_dimension_systemd_service_result

- name: Ensure systemd reloaded after matrix-dimension.service installation
  service:
    daemon_reload: yes
  when: "matrix_dimension_systemd_service_result.changed|bool"

- name: Ensure matrix-dimension.service restarted, if necessary
  service:
    name: "matrix-dimension.service"
    state: restarted
  when: "matrix_dimension_requires_restart|bool"
